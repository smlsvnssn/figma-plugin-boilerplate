const ö={random:(e,t,o=!1)=>(o="boolean"==typeof t?t:o,[e,t]=void 0===t||"boolean"==typeof t?void 0===e?[0,2]:[0,+e]:[+e,+t],o?Math.random()*(t-e)+e:Math.floor(Math.random()*(t-e))+e),randomNormal:(e=0,t=1)=>{let o=0,a=0;for(;a<6;a++)o+=Math.random();return 8.35*t*(o-3)/6+e},clamp:(e,t,o)=>Math.min(Math.max(e,t),o),round:(e,t=0)=>Math.round(e*10**t+Number.EPSILON)/10**t},clone=e=>{const t=typeof e;if(null===e)return null;if("undefined"===t||"number"===t||"string"===t||"boolean"===t)return e;if("object"===t){if(e instanceof Array)return e.map(e=>clone(e));if(e instanceof Uint8Array)return new Uint8Array(e)}const o={};for(const t in e)o[t]=clone(e[t]);return o},toHsla=({r:e=0,g:t=0,b:o=0,a:a=1}={})=>{const n=Math.min(e,t,o),r=Math.max(e,t,o),s=r-n,i=(r+n)/2;return{h:(60*(0===s?0:r===e?(t-o)/s%6:r===t?(o-e)/s+2:(e-t)/s+4)+360)%360,s:0===s?0:s/(1-Math.abs(2*i-1)),l:i,a:a}},toRgba=({h:e=0,s:t=0,l:o=0,a:a=1}={})=>{const n=(1-Math.abs(2*o-1))*t,r=n*(1-Math.abs(e/60%2-1)),s=o-n/2,[i,l,m]=0<=e&&e<60?[n,r,0]:60<=e&&e<120?[r,n,0]:120<=e&&e<180?[0,n,r]:180<=e&&e<240?[0,r,n]:240<=e&&e<300?[r,0,n]:300<=e&&e<360?[n,0,r]:null;return{r:ö.round(i+s,5),g:ö.round(l+s,5),b:ö.round(m+s,5),a:ö.round(a,5)}},randomise=(e,t)=>{let{h:o,s:a,l:n,a:r}=toHsla(e);return o=(ö.randomNormal(o,t.hsla.h)+3600)%360,a=ö.clamp(ö.randomNormal(a,t.hsla.s),0,1),n=ö.clamp(ö.randomNormal(n,t.hsla.l),0,1),r=ö.clamp(ö.randomNormal(r,t.hsla.a),0,1),toRgba({h:o,s:a,l:n,a:r})},randomisePaint=(e,t)=>{if("IMAGE"===e.type)return e;if("SOLID"===(e=clone(e)).type){const{r:o,g:a,b:n,a:r}=randomise({r:e.color.r,g:e.color.g,b:e.color.b,a:e.opacity},t);return e.color={r:o,g:a,b:n},e.opacity=r,e}return e.type.includes("GRADIENT")&&t.settings.includeGradients?(e.gradientStops=clone(e.gradientStops).map(e=>(e.color=randomise(e.color,t),e)),e):e},defaultFont={family:"Roboto",style:"Regular"},rememberedNodes=new Map,getFontNames=e=>{return e.hasMissingFont?(figma.notify("Has missing font, replacing with Roboto Regular"),[defaultFont]):e.fontName===figma.mixed?(e=>{const t=new Set,o=[];for(const a of Array.from(e.characters).keys()){const n=e.getRangeFontName(a,a+1),r=n.family+n.style;t.has(r)||(t.add(r),o.push(n))}return o})(e):[e.fontName]},getSavedState=async()=>await figma.clientStorage.getAsync("savedState"),render=async e=>{figma.currentPage.selection.map(async t=>{if(!("fills"in t||"strokes"in t))return t;if(rememberedNodes.has(t.id)?(t.fills=rememberedNodes.get(t.id).fills,t.strokes=rememberedNodes.get(t.id).strokes):rememberedNodes.set(t.id,{fills:t.fills,strokes:t.strokes}),t.fills=e.settings.includeFills?clone(t.fills).map((t,o)=>randomisePaint(t,e)):t.fills,t.strokes=e.settings.includeStrokes?clone(t.strokes).map((t,o)=>randomisePaint(t,e)):t.strokes,"characters"in t){for(const e of getFontNames(t))await figma.loadFontAsync(e);t.hasMissingFont&&(t.fontName=defaultFont)}return t}),figma.currentPage.selection.filter(e=>"fills"in e||"strokes"in e).length||figma.notify("Whoopsie-daisy! You need to select one or more objects with fills or strokes. Groups don't work."),figma.clientStorage.setAsync("savedState",e)},init=async()=>{const e=await getSavedState();figma.showUI(__html__,{width:300,height:478}),e&&figma.ui.postMessage(e),figma.ui.onmessage=render};init();